# this is the base docker compose
#
# run production:
#    docker-compose -f docker-compose.yaml -f docker-compose.prod.yaml up -d
#
# run development:
#    docker-compose up -d
#
# NOTE: if -f is not given, 'docker-compose up' will use docker-compose.override.yaml (https://docs.docker.com/compose/extends/)

version: '3'

services:
  arena-web: # create a container named "arena-web"; other service containers in this file can resolve its name (arena-web)
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt:ro # mount certbot files (used in conf/nginx-conf.d/arena-web.conf)
      - ./data/certbot/www:/var/www/certbot:ro # mount certbot files (used in conf/nginx-conf.d/arena-web.conf)
    depends_on:
      - mqtt
      - arena-persist
      - store
      - arena-account

  mongodb:
    image: mongo # pull from https://hub.docker.com/_/mongo/
    volumes:
      - ./data/mongodb:/data/db:rw # permanent storage on the host
      - ./data/backup:/backup:rw # backup storage on the host

  arena-persist:
    user: "node"
    volumes:
      - ./conf/persist-config.json:/home/node/app/config.json:ro # mount updated config.json that uses the container name
      - ./data/keys/jwt.public.pem:/home/node/app/pubsubkey.pub:ro # pubsub public key available to service
    command: "npm run start"
    depends_on:
      - mongodb
      - mqtt

  arena-account:
    volumes:
      - ./data/keys/jwt.priv.pem:/home/node/app/pubsubkey.pem:ro # pubsub key available to service
    depends_on:
      - arena-persist
    command: "python manage.py runserver 0.0.0.0:8000"

  mqtt:
    volumes:
      - ./conf/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro # mount local config file to /mosquitto/config/mosquitto.conf in the container
      - ./data/keys/jwt.public.der:/pubsubkey.der:ro # pubsub key available to service
      - ./data/certbot/conf:/etc/letsencrypt:ro # mount certs volume (see conf/mosquitto.conf to see how the files are used)

  store:
    volumes:
      - ./conf/arena-store-config.json:/.filebrowser.json:ro
      - ./store-branding:/arena-store/frontend/arena-branding:ro
      - ./store:/srv-files:rw
      - ./data/arena-store:/arena-store/data:rw
    restart: unless-stopped # service will respawn unless we tell docker to stop it
