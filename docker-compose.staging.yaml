# this is the staging docker compose; add dev folders in arena web; used for remote development
#
# run staging:
#    docker-compose -f docker-compose.yaml -f docker-compose.staging.yaml up -d
#
version: '3'

services:

  arena-web: # create a container named "arena-web"; other service containers in this file can resolve its name (arena-web)
    image: "nginx" # creates container from nginx
    volumes:
      - ./conf/staging/arena-web.conf:/etc/nginx/conf.d/arena-web-staging.conf:ro # mount nginx config
      - ./arena-web-core:/usr/share/nginx/html:rw # mount root html from ./arena-web-core
      - ./conf/arena-web-conf-files:/usr/share/nginx/html/conf:ro # arena client code conf
      - ./store:/usr/share/nginx/html/store:ro # mount store
      - ./data/certbot/www:/var/www/certbot:ro # mount certbot files (used in conf/nginx-conf.d/arena-web.conf)
      - account-static-content:/usr/share/nginx/html/user/static:ro # serve account static files
      - ../dev:/usr/share/nginx/html/dev:ro # mount dev folder
    ports:
      - "80:80" # map port 80 on the host to port 80 on the container
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'" # reload certificates every 6h
    restart: unless-stopped # service will respawn unless we tell docker to stop it

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt:rw # mount certbot files; certificate files will be here
      - ./data/certbot/www:/var/www/certbot:rw # mount certbot files;
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'" # check for certificate updates every 12h

  mongodb:
    image: mongo:latest # pull from https://hub.docker.com/_/mongo/
    restart: unless-stopped

  arena-persist:
    build: "arena-persist" # builds container from arena-persist Dockerfile
    restart: unless-stopped

  arena-account:
    build: "arena-account" # builds container from arena-account Dockerfile
    restart: unless-stopped

  mqtt:
    image: conixcenter/arena-broker # pulls from https://hub.docker.com/repository/docker/conixcenter/arena-broker
    restart: unless-stopped

  mqtt-br1:
    image: conixcenter/arena-broker # pulls from https://hub.docker.com/repository/docker/conixcenter/arena-broker
    volumes:
      - ./conf/mosquitto-br-conn.conf:/mosquitto/config/mosquitto.conf:ro # mount local config file to /mosquitto/config/mosquitto.conf in the container
      - ./data/keys/jwt.public.der:/pubsubkey.der:ro # pubsub key available to service
      - ./data/certbot/conf:/etc/letsencrypt:ro # mount certs volume (see conf/mosquitto.conf to see how the files are used)
    depends_on:
      - mqtt
    restart: unless-stopped

  store:
    # version #, settings, and full inline script from /storemng must match ./init-utils/filebrowserScriptToHash.js values
    image: "filebrowser/filebrowser:latest"  # pulls from https://hub.docker.com/r/filebrowser/filebrowser

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - 8080:8080

  arena-host-stats:
    image: prom/node-exporter:latest

  prometheus:
    image: prom/prometheus:latest

  grafana:
    image: grafana/grafana:latest

volumes:
  account-static-content:
