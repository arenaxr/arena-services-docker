# enter your hostname; localhost, .local or .arena hostnames can be used for local network setups 
HOSTNAME=localhost

# enter additional hostnames, if supported; space-separated list FQDNs (leave undefined if not applicable)
# ADDITIONAL_HOSTNAMES=host1.domain1 host2.domain2

# enter a jitsi host to be used for video conferencing; you can use a public/managed jitsi instance or setup your own
JITSI_HOSTNAME=full.domain.name.of.your.jitsi.host

# enter your email; non local setups will use letsencrypt to create a certificate; this is the email used in the request
EMAIL=nouser@nomail.com

# enter the groupid:userid of the user to perform backups (leave undefined if no backup is setup)
# BACKUP_USER=1001:1001

# arena realm to use (ok to leave as is)
ARENA_REALM=realm

# full path to this repository on your machine
ARENA_DOCKER_REPO_FOLDER=full/path/to/repo/folder

# Google oauth credentials (see https://developers.google.com/identity/protocols/oauth2/web-server)
GAUTH_CLIENTID=Google_OAuth_Web_Client_ID
GAUTH_CLIENTSECRET=Google_OAuth_Web_Client_Secret
GAUTH_INSTALLED_CLIENTID=Google_OAuth_Desktop_Client_ID
GAUTH_INSTALLED_CLIENTSECRET=Google_OAuth_Desktop_Client_Secret

# django credentials (ok to leave as is)
DJANGO_SUPERUSER_USERNAME=admin
DJANGO_SUPERUSER_EMAIL=admin@example.com

# store admin username (ok to leave as is)
STORE_ADMIN_USERNAME=admin

# slack token used to post develop messages (leave undefined if not using)
#SLACK_DEV_CHANNEL_WEBHOOK=slack-token-to-post-messages